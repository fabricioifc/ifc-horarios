<%= simple_form_for(@recurring_event) do |f| %>
  <%= render "shared/error_messages", :target => @recurring_event %>

  <div class="form-inputs">
    <!-- <= f.input :title, autofocus:true %> -->
    <%= simple_fields_for :outros do |n| %>
      <%= n.input :turma_id, collection: Turma.order(:name), label_method: :name, value_method: :id, selected: (@recurring_event.events.first.turma_id unless @recurring_event.events.empty?), :prompt => 'Escolha a Turma', autofocus:true, input_html: { class: "form-control input-sm" } %>
      <%= n.input :discipline_id, collection: Discipline.order(:name), label_method: :name, value_method: :id, selected: (@recurring_event.events.first.discipline_id unless @recurring_event.events.empty?), :prompt => 'Escolha a Disciplina', input_html: { class: "form-control input-sm" } %>
     <% end %>
    <!-- <= f.input :anchor, input_html: { class: "form-control input-sm" } %> -->
    <div class="row">
      <div class="form-group">
        <div class="col-md-4">
            <%= f.label :start_date, class: 'control-label' %>
            <%= f.text_field :start_date, value: (@recurring_event.start_date.strftime('%d/%m/%Y %H:%M') unless @recurring_event.start_date.nil?), class: 'form-control input-sm date-time-picker-start' %>
        </div>
        <div class="col-md-4">
            <%= f.label :end_date, class: 'control-label' %>
            <%= f.text_field :end_date, value: (@recurring_event.end_date.strftime('%d/%m/%Y %H:%M') unless @recurring_event.end_date.nil?), class: 'form-control input-sm date-time-picker-end' %>
        </div>
        <div class="col-md-4">
            <%= f.label :extra_date, class: 'control-label' %>
            <%= f.text_field :extra_date, value: (@recurring_event.extra_date.strftime('%d/%m/%Y') unless @recurring_event.extra_date.nil?), class: 'form-control input-sm date-picker' %>
        </div>
      </div>
    </div>
    <%= f.input :frequency, as: :select, collection: RecurringEvent.frequencies.keys, input_html: { class: "form-control input-sm" } %>
    <%= f.input :color, as: :select, collection: [['Black','#000000'], ['Green',' #009933'], ['Red','#990000']] %>

    <% unless @recurring_event.new_record? %>
      <%= simple_fields_for :outros do |n| %>
        <div class="well well-sm">
          <!-- <= f.input :atualizar_todos, as: :boolean, checked_value: true, unchecked_value: false unless @event.recurring_event.nil? %> -->
          <%= n.input :atualizar_proximos, as: :boolean, checked_value: true, unchecked_value: false %>
          <small class="help-block">Esta opção deve ser utilizada para alterar todas as aulas a partir da Data Inicial selecionada.</small>
        </div>
      <% end %>
    <% end %>


  </div>

  <div class="form-actions">
    <%= f.button :submit %>
  </div>
<% end %>
